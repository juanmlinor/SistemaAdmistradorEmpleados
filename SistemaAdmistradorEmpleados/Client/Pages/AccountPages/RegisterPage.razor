@page "/identity/account/register"
@layout AuthenticationLayout


<div class="container">
   <div class="row">
     <div class="col-lg-4"></div>
     <div class="col-lg-4">
            <EditForm Enhance Model="User" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />             
                 <div class="card bg-dark d-flex justify-content-center" style="opacity:0.5; margin-top:50%; border-radius:10px; color:white; font-weight:bold">
                  <div class="card-header">Register an account</div>
                  <div class="container">
                       <div class="row">
                         <div class="col-lg-4 col-md-4 col-sm-4"></div>
                         <div class="col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center"></div>
                          <img style="border-radius:20px" src="../images/companylogos/netcode.jpg" height="50" width="50" />
                         </div>
                         <div class="col-lg-4 col-md-4 col-sm-4"></div>
                     </div>
                <div class="card-body">
                     <div class="form-group mt-3">
                        <label class="form-label">FullName</label>
                        <InputText @bind-Value="User.Fullname" class="form-control"></InputText>                    
                     </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Email</label>
                        <InputText @bind-Value="User.Email" class="form-control"></InputText>                    
                     </div>
                     <div class="form-group mt-3">
                        <label class="form-label">Password</label>
                        <input @bind="User.Password" class="form-control"></input>                    
                     </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Confirm Password</label>
                        <input @bind ="User.ConfirmPassword" class="form-control"></input>
                    </div>
                     <div class="form-group mt-3">
                             @if (ShowLoadingButton)
                            {
                              <Client.Pages.OtherPages.ButtonLoadingSpinner></Client.Pages.OtherPages.ButtonLoadingSpinner>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary float-end" type="submit">Register</button>
                            }                          
                     </div>
                 </div>
                    <div class="card-footer">
                        <span class="text-center">
                            Dont have account?
                        <a class="btn-link" href="identity/account/register">Sign Up</a>
                        </span>
                        <ValidationSummary />
                    </div>                
            </div>    
        </EditForm> 
     </div>
      <div class="col-lg-4" >
                  
      </div>
   </div>
</div>

@code{
    public bool ShowLoadingButton { get; set; } = false;
    Register User=new();

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState{get; set;}

    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }    

    async Task HandleRegistration()
    {
        ShowLoadingButton = true;
        var result = await accountService.CreateAsync(User);
        if (result.Flag)
        {
            await DisplayDialog(result.Message, "Success");
            User= new();

        }
        else
        {
            await DisplayDialog(result.Message, "Alert");
        }
        ShowLoadingButton = false;
    }
    private async Task DisplayDialog(string content, string title)
    {
       // await DialogService.AlertAsync(content, title);
    }

     private async Task CheckUserAuthentication()
    {
        var user=(await AuthenticationState).User;
        bool isAuthenticated = user.Identity!.IsAuthenticated;
        if( !isAuthenticated )       
        NavManager.NavigateTo("/identity/account/register");
    }
}